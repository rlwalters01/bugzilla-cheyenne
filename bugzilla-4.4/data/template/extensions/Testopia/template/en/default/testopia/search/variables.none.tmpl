use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/search/variables.none.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  \n";
#line 22 "extensions/Testopia/template/en/default/testopia/search/variables.none.tmpl"
    $stash->set('query_variants', [ { 'id' => 'allwordssubstr', 'name' => 'contains all of the words/strings'  }, { 'id' => 'anywordssubstr', 'name' => 'contains any of the words/strings'  }, { 'id' => 'substring', 'name' => 'contains the string'  }, { 'id' => 'casesubstring', 'name' => 'contains the string (exact case)'  }, { 'id' => 'allwords', 'name' => 'contains all of the words'  }, { 'id' => 'anywords', 'name' => 'contains any of the words'  }, { 'id' => 'regexp', 'name' => 'matches the regexp'  }, { 'id' => 'notregexp', 'name' => 'doesn\'t match the regexp'  } ]);
    $output .=  "\n";
#line 32 "extensions/Testopia/template/en/default/testopia/search/variables.none.tmpl"
    $stash->set('email_variants', [ { 'id' => 'substring', 'name' => 'contains'  }, { 'id' => 'exact', 'name' => 'is'  }, { 'id' => 'regexp', 'name' => 'matches regexp'  }, { 'id' => 'notregexp', 'name' => 'doesn\'t match regexp'  } ]);
    $output .=  "\n  ";
#line 38 "extensions/Testopia/template/en/default/testopia/search/variables.none.tmpl"
    $stash->set('tag_variants', [ { 'id' => 'anyexact', 'name' => 'is tagged with'  }, { 'id' => 'notag', 'name' => 'is NOT tagged with'  }, { 'id' => 'allwordssubstr', 'name' => 'contains all of the words/strings'  }, { 'id' => 'anywordssubstr', 'name' => 'contains any of the words/strings'  }, { 'id' => 'substring', 'name' => 'contains the string'  }, { 'id' => 'casesubstring', 'name' => 'contains the string (exact case)'  }, { 'id' => 'regexp', 'name' => 'matches the regexp'  }, { 'id' => 'allwords', 'name' => 'contains all of the words'  }, { 'id' => 'anywords', 'name' => 'contains any of the words'  } ]);
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
