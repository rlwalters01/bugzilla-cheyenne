use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/case/navigate.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  \n<a href=\"tr_show_product.cgi?product_id=";
#line 23 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'plans', 0, 0, 0, 'product_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Product: ";
#line 23 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'plans', 0, 0, 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n&nbsp;&gt;&nbsp;";
#line 29 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('plan_id')) {
    $output .=  "\n<a href=\"tr_show_plan.cgi?plan_id=";
#line 26 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('plan_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Plan: ";
#line 26 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('plan_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>";
    }
    else {
    $output .=  "\n<a href=\"tr_show_plan.cgi?plan_id=";
#line 28 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'plans', 0, 0, 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" title=\"";
#line 28 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'plans', 0, 0, 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Plan ";
#line 28 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'plans', 0, 0, 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>";
    }
    
    $output .=  "\n&nbsp;&gt;&nbsp; Case ";
#line 30 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n<br/>";
#line 32 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $stash->set('list', $stash->get(['table', 0, 'get_saved_list', [ 'case' ]]));
    $output .=  "\n<b>Case List:</b>";
#line 76 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('table') && $stash->get('list') > 0) {
#line 35 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $stash->set('curr', $stash->get(['lsearch', [ $stash->get('list'), $stash->get(['case', 0, 'id', 0]) ]]));
#line 40 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') ne -1 && ($stash->get('curr') > 0)) {
    $output .=  "\n  <a href=\"tr_show_case.cgi?case_id=";
#line 37 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get(['list', 0, 'first', 0]);
    $output .=  "\">&lt;&lt;&nbsp;First</a>";
    }
    else {
    $output .=  "\n  <i><font color=\"#777777\">&lt;&lt;First</font></i>  ";
    }
    
    $output .=  "\n";
#line 64 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('case')) {
#line 61 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') ne -1) {
#line 49 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') > 0) {
#line 45 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $stash->set('prev', $stash->get('curr') - 1);
    $output .=  "\n        <a href=\"tr_show_case.cgi?case_id=";
#line 46 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get(['list', 0, $stash->get('prev'), 0]);
    $output .=  "\">&lt;&nbsp;Prev</a>";
    }
    else {
    $output .=  "\n        <i><font color=\"#777777\">Prev</font></i>";
    }
    
    $output .=  "\n";
#line 53 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') ne -1) {
    $output .=  "\n        &nbsp;&nbsp;(";
#line 52 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get('curr') + 1;
    $output .=  " of ";
#line 52 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get(['list', 0, 'size', 0]);
    $output .=  ")&nbsp;&nbsp;";
    }
    
    $output .=  "\n";
#line 60 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') + 1 < $stash->get(['list', 0, 'size', 0])) {
#line 56 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $stash->set('next', $stash->get('curr') + 1);
    $output .=  "\n        <a href=\"tr_show_case.cgi?case_id=";
#line 57 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get(['list', 0, $stash->get('next'), 0]);
    $output .=  "\">Next&nbsp;&gt;</a>";
    }
    else {
    $output .=  "\n        <i><font color=\"#777777\">Next</font></i>";
    }
    
    }
    
    }
    else {
    $output .=  "\n    &nbsp;&nbsp;";
    }
    
    $output .=  "\n";
#line 70 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    if ($stash->get('curr') ne -1 && ($stash->get('curr') + 1 < $stash->get(['list', 0, 'size', 0]))) {
    $output .=  "\n  <a href=\"tr_show_case.cgi?case_id=";
#line 67 "extensions/Testopia/template/en/default/testopia/case/navigate.html.tmpl"
    $output .=  $stash->get(['list', 0, 'last', 0]);
    $output .=  "\">Last&nbsp;&gt;&gt;</a>";
    }
    else {
    $output .=  "\n    <i><font color=\"#777777\">Last&gt;&gt;</font></i>";
    }
    
    $output .=  "\n";
    }
    else {
    $output .=  "\n  ";
    $output .=  "\n  &nbsp;&nbsp;\n  <i><font color=\"#777777\">No search results available</font></i>";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
