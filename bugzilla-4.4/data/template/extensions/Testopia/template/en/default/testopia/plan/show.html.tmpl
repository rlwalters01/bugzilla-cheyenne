use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/plan/show.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 26 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
#line 27 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('testopia/blocks.html.tmpl');
#line 28 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('testopia/style.none.tmpl');
    $output .=  "\n";
#line 30 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $stash->get(['javascript_urls', 0, 'push', [ 'extensions/Testopia/extjs/examples/ux/Portal.js' ]]);
#line 31 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $stash->get(['javascript_urls', 0, 'push', [ 'extensions/Testopia/extjs/examples/ux/PortalColumn.js' ]]);
#line 32 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $stash->get(['javascript_urls', 0, 'push', [ 'extensions/Testopia/extjs/examples/ux/Portlet.js' ]]);
    $output .=  "\n";
#line 38 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if (! $stash->get(['plan', 0, 'isactive', 0])) {
#line 1 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ("Test Plan " . $stash->get(['plan', 0, 'id', 0]) . ": " . $stash->get(['plan', 0, 'name', 0]) . " (ARCHIVED)");
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    }
    else {
#line 1 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ("Test Plan " . $stash->get(['plan', 0, 'id', 0]) . ": " . $stash->get(['plan', 0, 'name', 0]));
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    }
    
    $output .=  "\n";
#line 40 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    $output .=  "\n\n<script type=\"text/javascript\">\n    var product_id;\n    var plan = ";
#line 44 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'TO_JSON', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ";\n    \n    Ext.onReady(function(){\n        Ext.QuickTips.init();\n        var testopia_form = new Ext.form.BasicForm('testopia_helper_frm',{});\n        \n        var confirmDelete = function(){\n            Ext.Msg.show({\n               title:'Confirm Delete?',\n               msg: 'You are about to delete plan ' + plan.plan_id + ' with all of its children and history. Are you sure you want to continue?',\n               buttons: Ext.Msg.YESNO,\n               fn: planDelete,\n               animEl: 'plan-delete-btn',\n               icon: Ext.MessageBox.QUESTION\n            });\n        };\n        var planDelete = function(btn){\n            if (btn == 'yes'){\n                testopia_form.submit({\n                    url: 'tr_process_plan.cgi',\n                    params: {plan_id: plan.plan_id, action:'delete'},\n                    success: function(data){\n                        Ext.Msg.show({\n                            title:'Test Plan Deleted',\n                            msg: \"Test Plan \" + plan.plan_id + \" was deleted\",\n                            buttons: Ext.Msg.OK,\n                            icon: Ext.MessageBox.INFO\n                        });\n                        window.location = 'tr_show_product.cgi?product_id=' + plan.product_id;\n                    },\n                    failure: Testopia.Util.error\n                });\n            }\n        };\n        var cgrid = new Testopia.TestCase.Grid({plan_id: plan.plan_id, product_id: plan.product_id },{id: 'plan_case_grid'});\n        var rgrid = new Testopia.TestRun.Grid({plan_id: plan.plan_id },{id: 'plan_run_grid'});\n        var tgrid = new Testopia.Tags.ObjectTags('plan', plan.plan_id);\n        var attachGrid = new Testopia.Attachment.Grid(plan);\n        \n        var fileMenu = new Ext.menu.Menu({\n            id: 'plan-file-menu',\n            items: [{\n                text: \"Archived\",\n                id: 'plan_archive_mnu',\n                ignoreParentClicks: true,\n                checked: ";
#line 89 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $stash->get(['plan', 0, 'isactive', 0]) ? 'false' : 'true';
    $output .=  ",\n                checkHandler: function(i,c){\n                    testopia_form.submit({\n                        url: 'tr_process_plan.cgi',\n                        params: {action: c ? 'archive':'unarchive' , plan_id: plan.plan_id},\n                        success: function(){\n                            Testopia.Util.notify.msg('Plan updated', 'Plan {0} was updated successfully', 'archival');\n                            if (c){\n                                Ext.get('archive_flag').addClass('plan_archived');\n                            }\n                            else {\n                                Ext.get('archive_flag').removeClass('plan_archived');\n                            }\n                        },\n                        failure: Testopia.Util.error\n                    });\n                }\n            }";
#line 116 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'Testers' ]])) {
    $output .=  "\n            ,{\n                text: 'Clone',\n                icon: 'extensions/Testopia/img/copy.png',\n                iconCls: 'img_button_16x',\n                handler: function(){\n                    Testopia.TestPlan.ClonePopup(plan);\n                }\n            }";
    }
    
    $output .=  "\n            ,{\n                text: \"Print\",\n                handler: function(){\n                    window.location='tr_show_plan.cgi?&plan_id=";
#line 120 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&ctype=print';\n                }\n            },{\n                text: 'Export',\n                menu: [{\n                    text: 'Test Results as CSV',\n                    handler: function(){\n                        window.location = 'tr_list_caseruns.cgi?ctype=csv&viewall=1&plan_id=";
#line 127 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "';\n                    }\n                },{\n                    text: 'Cases as CSV',\n                    handler: function(){\n                        window.location='tr_show_plan.cgi?&plan_id=";
#line 132 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&export=testcases&ctype=csv&viewall=1';\n                    }\n                },{\n                    text: 'Plan as XML',\n                    handler: function(){\n                        window.location='tr_show_plan.cgi?&plan_id=";
#line 137 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&export=testcases&ctype=xml&viewall=1';             \n                    }\n                }]\n            },{\n                text: 'Import',\n                menu:[{\n                    text: 'Cases',\n                    handler: function(){\n                        Testopia.TestPlan.Import({\n                            plan_id: plan.plan_id\n                        });\n                    }\n                }]\n            },{\n                text: 'New',\n                menu: [{\n                    text: 'Test Run',\n                    handler: function(){\n                        Testopia.TestRun.NewRunPopup(plan);\n                    }\n                },{\n                    text: 'Test Case',\n                    handler: function(){\n                        Testopia.TestCase.NewCasePopup(plan.plan_id, plan.product_id);\n                    }\n                }]\n            },{\n                text: \"Delete\",\n                id: 'btn-delete',\n                icon: 'extensions/Testopia/img/delete.png',\n                iconCls: 'img_button_16x',\n                disabled: plan.candelete ? false : true,\n                handler: confirmDelete\n            }]\n        });\n        var editMenu = new Ext.menu.Menu({\n            id: 'plan-edit-menu',\n            items: [{\n                text: \"Access Controls\",\n                handler: function(){\n                    Ext.getCmp('object_panel').activate('plan-permissions');\n                }\n            }]\n        });\n        var viewMenu = new Ext.menu.Menu({\n            id: 'view-menu',\n            items: [{\n                text: \"Reports\",\n                menu: [{\n                    text: 'New Status Report',\n                    handler: function(){\n                        Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                        \n                        var newPortlet = new Ext.ux.Portlet({\n                            title: 'Status Report',\n                            closable: true,\n                            autoScroll: true,\n                            tools: PortalTools\n                        });\n                        newPortlet.url = 'tr_run_reports.cgi?type=status&plan_ids=' + plan.plan_id;\n                        Testopia.Search.dashboard_urls.push(newPortlet.url);\n                        Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                        Ext.getCmp('dashboard_leftcol').doLayout();\n                        newPortlet.load({\n                            url: newPortlet.url\n                        });\n                    }\n                }, {\n                    text: 'New Completion Report',\n                    handler: function(){\n                        Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                        \n                        var newPortlet = new Ext.ux.Portlet({\n                            title: 'Completion Report',\n                            closable: true,\n                            autoScroll: true,\n                            tools: PortalTools\n                        });\n                        newPortlet.url = 'tr_run_reports.cgi?type=completion&plan_ids=' + plan.plan_id;\n                        Testopia.Search.dashboard_urls.push(newPortlet.url);\n                        Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                        Ext.getCmp('dashboard_leftcol').doLayout();\n                        newPortlet.load({\n                            url: newPortlet.url\n                        });\n                    }\n                }, {\n                    text: 'New Run Execution Report',\n                    handler: function(){\n                        var win = new Ext.Window({\n                            title: 'Select a date range',\n                            id: 'plan_execution_win',\n                            layout: 'fit',\n                            split: true,\n                            plain: true,\n                            shadow: false,\n                            width: 350,\n                            height: 150,\n                            items: [new Ext.FormPanel({\n                                labelWidth: '40',\n                                bodyStyle: 'padding: 5px',\n                                items: [{\n                                    xtype: 'datefield',\n                                    id: 'execution_start_date',\n                                    fieldLabel: 'Start Date',\n                                    name: 'chfieldfrom'\n                                }, {\n                                    xtype: 'datefield',\n                                    fieldLabel: 'Stop Date',\n                                    id: 'execution_stop_date',\n                                    emptyText: 'Now',\n                                    name: 'chfieldto'\n                                }]\n                            })],\n                            buttons: [{\n                                text: 'Submit',\n                                handler: function(){\n                                    Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                                    \n                                    var newPortlet = new Ext.ux.Portlet({\n                                        title: 'Execution Report',\n                                        closable: true,\n                                        autoScroll: true,\n                                        tools: PortalTools\n                                    });\n                                    newPortlet.url = 'tr_run_reports.cgi?type=execution&plan_ids=' + plan.plan_id + '&chfieldfrom=' + Ext.getCmp('execution_start_date').getValue() + '&chfieldto=' + Ext.getCmp('execution_stop_date').getValue();\n                                    Testopia.Search.dashboard_urls.push(newPortlet.url);\n                                    Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                                    Ext.getCmp('dashboard_leftcol').doLayout();\n                                    newPortlet.load({\n                                        url: newPortlet.url\n                                    });\n                                    win.close();\n                                }\n                            }, {\n                                text: 'Cancel',\n                                handler: function(){\n                                    win.close();\n                                }\n                            }]\n                        });\n                        win.show();\n                    }\n                }, {\n                    text: 'New Priority Breakdown Report',\n                    handler: function(){\n                        Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                        \n                        var newPortlet = new Ext.ux.Portlet({\n                            title: 'Status Report',\n                            closable: true,\n                            autoScroll: true,\n                            tools: PortalTools\n                        });\n                        newPortlet.url = 'tr_run_reports.cgi?type=priority&plan_ids=' + plan.plan_id;\n                        Testopia.Search.dashboard_urls.push(newPortlet.url);\n                        Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                        Ext.getCmp('dashboard_leftcol').doLayout();\n                        newPortlet.load({\n                            url: newPortlet.url\n                        });\n                    }\n                }, {\n                    text: 'New Bug Report',\n                    handler: function(){\n                        Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                        var newPortlet = new Ext.ux.Portlet({\n                            title: 'Bug Report',\n                            closable: true,\n                            autoScroll: true,\n                            tools: PortalTools\n                        });\n                        newPortlet.url = 'tr_run_reports.cgi?type=bug_grid&plan_ids=' + plan.plan_id + '&noheader=1';\n                        Testopia.Search.dashboard_urls.push(newPortlet.url);\n                        Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                        Ext.getCmp('dashboard_leftcol').doLayout();\n                        newPortlet.load({\n                            scripts: true,\n                            url: newPortlet.url\n                        });\n                    }\n                }, {\n                    text: 'Worst Offender Report',\n                    handler: function(){\n                        Ext.getCmp('object_panel').setActiveTab('dashboardpanel');\n                        \n                        var newPortlet = new Ext.ux.Portlet({\n                            title: 'Worst Offender Report',\n                            closable: true,\n                            autoScroll: true,\n                            tools: PortalTools\n                        });\n                        newPortlet.url = 'tr_run_reports.cgi?type=worst&plan_ids=' + plan.plan_id + '&noheader=1';\n                        Testopia.Search.dashboard_urls.push(newPortlet.url);\n                        Ext.getCmp('dashboard_leftcol').add(newPortlet);\n                        Ext.getCmp('dashboard_leftcol').doLayout();\n                        newPortlet.load({\n                            scripts: true,\n                            url: newPortlet.url\n                        });\n                        \n                    }\n                },{\n                    text: 'Missing Cases Report',\n                    handler: function(){\n                        window.open('tr_list_cases.cgi?report_type=missing&plan_ids=' + plan.plan_id);\n                    }\n                }, {\n                    text: 'Case Roll-up Report',\n                    handler: function(){\n                        window.open('tr_list_caseruns.cgi?report_type=rollup&plan_ids=' + plan.plan_id);\n                    }\n                }]\n            }]\n        });\n    \n        var planpanel = new Ext.Panel({\n            layout: 'border',\n            title: '";
#line 355 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('title');
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            monitorResize: true,\n            height: 800,\n            footer: true,\n            autoShow: true,\n            tbar: [{\n                    text: 'File',\n                    menu: fileMenu\n                },{\n                    text: 'Edit',\n                    menu: editMenu\n                },{\n                    text: 'View',\n                    menu: viewMenu\n                },\n                '->'";
#line 382 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'Testers' ]])) {
    $output .=  "\n                ,{\n                    xtype: 'button',\n                    id: 'plan-copy-button',\n                    icon: 'extensions/Testopia/img/copy.png',\n                    iconCls: 'img_button_16x',\n                    tooltip: 'Clone this Test Plan',\n                    handler: function(){\n                        Testopia.TestPlan.ClonePopup(plan);        \n                    }\n                }";
    }
    
#line 392 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['plan', 0, 'candelete', 0])) {
    $output .=  "\n                ,{\n                    xtype: 'button',\n                    id: 'plan-delete-btn',\n                    icon: 'extensions/Testopia/img/delete.png',\n                    iconCls: 'img_button_16x',\n                    tooltip: 'Delete this Plan',\n                    handler: confirmDelete\n                }";
    }
    
    $output .=  "\n            ,{xtype: 'tbspacer', width: 20}\n            ],\n            applyTo: 'plan-body-div',\n            items:[{\n                xtype: 'tabpanel',\n                stateEvents: ['tabchange'],\n                split: true,\n                region: 'center',\n                id: 'object_panel',\n                activeTab: Ext.state.Manager.get('plan_active_tab', 0),\n                listeners: { \n                  'tabchange': function(){\n                        Ext.state.Manager.set('plan_active_tab', Ext.getCmp('object_panel').getActiveTab().getId());\n                  }\n                },\n                items: [\n                    new Testopia.Search.DashboardPanel({}),\n                    rgrid,\n                    cgrid,\n                    attachGrid,\n                    {\n                        layout: 'fit',\n                        title: 'Plan Document',\n                        tbar: new DocCompareToolbar('plan',plan.plan_id),\n                        items: [{\n                            id: 'plan_doc',\n                            xtype:'htmleditor',\n                            value: '";
#line 420 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'text', 0, 'plan_text', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'\n                        }],\n                        buttons: [{\n                            text: 'Submit',\n                            disabled: plan.canedit ? false : true,\n                            handler: function(){\n                                testopia_form.submit({\n                                    url: 'tr_process_plan.cgi',\n                                    params: {action: 'edit', plandoc: Ext.getCmp('plan_doc').getValue(), plan_id: plan.plan_id},\n                                    success: function(){\n                                        Testopia.Util.notify.msg('Plan updated', 'Plan {0} was updated successfully', 'Document');\n                                    },\n                                    failure: Testopia.Util.error\n                                });\n                            }\n                        }]\n                    },{\n                        layout: 'fit',\n                        id:'plan-permissions',\n                        title: 'Permissions',\n                        autoShow: true,\n                        autoScroll: true,\n                        contentEl: 'plan-permissions-div',\n                        bodyStyle: 'padding: 10px;'\n                    },new Testopia.Util.HistoryList('plan',plan.plan_id)]\n                \n            },{\n                id: 'test-plan-id',\n                split: true,\n                region: 'north',\n                contentEl: 'plan_overview',\n                height: Ext.get('plan_overview_table').getHeight() + 30\n            },{\n                id: 'plan_east_panel',\n                xtype: 'tabpanel',\n                region: 'east',\n                width: '200',\n                activeTab: 0,\n                split: true,\n                items: [tgrid, new Testopia.Search.SavedReportsList({\n                        title: 'Reports',\n                        id: 'reports_grid',\n                        type: 1\n                    })\n                ]\n            }]\n        });";
#line 538 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['plan', 0, 'canedit', 0])) {
    $output .=  "    \n        var vbox = new Testopia.Product.VersionCombo({\n            hiddenName: 'product_version',\n            transform: 'product_version'\n        });\n        vbox.on('select', function(c,r,i){\n            testopia_form.submit({\n                url: 'tr_process_plan.cgi',\n                params: {action: 'edit', prod_version: r.get('value'), plan_id: plan.plan_id},\n                success: function(){\n                    Testopia.Util.notify.msg('Plan updated', 'Plan {0} was updated successfully', 'Product Version');\n                },\n                failure: Testopia.Util.error\n            });\n        });\n    \n        if (Ext.get('adduser')){\n            var adduser = new Testopia.User.Lookup({\n                id: 'plan_permission_add_user',\n                hiddenName: 'adduser'\n            });\n            adduser.render('adduser');\n        }\n        \n        var types = new Testopia.TestPlan.TypesCombo({\n            hiddenName: 'plan_type',\n            transform: 'plan_type'\n        });\n        types.on('select', function(c,r,i){\n            testopia_form.submit({\n                url: 'tr_process_plan.cgi',\n                params: {action: 'edit', type: r.get('value'), plan_id: plan.plan_id},\n                success: function(){\n                    Testopia.Util.notify.msg('Plan updated', 'Plan {0} was updated successfully', 'type');\n                },\n                failure: Testopia.Util.error\n            });\n        });\n    \n        var edit_summary_btn = new Ext.Button({\n            applyTo: 'plan_name_edit_btn',\n            id:'edit_plan_summary_btn',\n            icon: 'extensions/Testopia/img/edit.png',\n            iconCls: 'img_button_16x',\n            tooltip: 'Edit Plan Summary',\n            handler: function(){\n                Ext.getCmp('plan_name_edt').startEdit(Ext.get('plan_name'));\n            }\n        });\n        var plan_name_edt = new Ext.Editor(\n            new Ext.form.TextField({\n                width: Ext.get('plan_name').getWidth() < 200 ? 200 : Ext.get('plan_name').getWidth(),\n                name: 'plan_name'\n            }),{\n                alignment: 'tl-tl',\n                id: 'plan_name_edt',\n                ignoreNoChange: true,\n                updateEl: true,\n                completeOnEnter: true,\n                cancelOnEsc: true\n        });\n        plan_name_edt.on('complete', function(e,v,sv){\n            testopia_form.submit({\n                url: 'tr_process_plan.cgi',\n                params: {action: 'edit', name: v, plan_id: plan.plan_id},\n                success: function(){\n                    Testopia.Util.notify.msg('Plan updated', 'Plan {0} was updated successfully', 'name');\n                },\n                failure: Testopia.Util.error\n            });\n        });";
    }
    
    $output .=  "\n        Ext.getCmp('dashboardpanel').on('render', function(){\n            Ext.getCmp('dashboardpanel').getTopToolbar().add({\n                xtype: 'button',\n                id: 'save_dashboard_btn',\n                icon: 'extensions/Testopia/img/save.png',\n                iconCls: 'img_button_16x',\n                tooltip: 'Save this dashboard',\n                handler: function(b,e){\n                    Testopia.Search.save('dashboard', Testopia.Search.dashboard_urls);\n                }\n            });\n        });\n        Ext.get('plan_overview').show();\n    });\n</script>\n<div id=\"archive_flag\" style=\"float: right;\" ";
#line 554 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if (! $stash->get(['plan', 0, 'isactive', 0])) {
    $output .=  'class="plan_archived"';
    }
    
    $output .=  "></div>";
#line 555 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('testopia/plan/navigate.html.tmpl');
    $output .=  "\n\n<div id=\"plan-body-div\" class=\"x-display-hidden\"></div>\n\n<div id=\"plan_overview\" style=\"visibility: hidden\">\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"3\" width=\"100%\" id=\"plan_overview_table\">\n  <tbody align=\"left\">\n    <tr class=\"bz_row_header\">\n      <th colspan=\"3\">Plan Name</th>\n    </tr>\n    <tr class=\"bz_row_data\">\n      <td colspan=\"3\">\n        <table>\n          <tr>\n            <td><div id=\"plan_name\">";
#line 569 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div></td>\n            <td><div id=\"plan_name_edit_btn\"></div></td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n    <tr class=\"bz_row_header\">\n      <th>Product</th>\n      <th>Product Version </th>\n      <th>Created</th>\n    </tr>\n    <tr class=\"bz_row_data\">\n      <td><a href=\"tr_show_product.cgi?product_id=";
#line 581 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 581 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a></td>\n      <td>";
#line 588 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['plan', 0, 'canedit', 0])) {
#line 583 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'product_version', 'list' => $stash->get(['plan', 0, 'product', 0, 'versions', 0]), 'default' => $stash->get(['plan', 0, 'product_version', 0])  } });
    }
    else {
#line 587 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product_version', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\n      </td>\n      <td>";
#line 590 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'creation_date', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n      </tr>\n    <tr class=\"bz_row_header\">\n      <th>Author</th>\n      <th>Plan Version</th>\n      <th>Type</th>\n      </tr>\n    <tr class=\"bz_row_data\">\n      <td><a href=\"mailto:";
#line 598 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'author', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 598 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'author', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a></td>\n      <td>";
#line 599 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n      <td>";
#line 606 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    if ($stash->get(['plan', 0, 'canedit', 0])) {
#line 601 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'plan_type', 'list' => $stash->get(['plan', 0, 'get_plan_types', 0]), 'default' => $stash->get(['plan', 0, 'plan_type', 0])  } });
    }
    else {
#line 605 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'plan_type', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n<div id=\"plan-permissions-div\" class=\"x-hidden\">";
#line 614 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('testopia/plan/access-list.html.tmpl');
    $output .=  "\n</div>\n";
#line 617 "extensions/Testopia/template/en/default/testopia/plan/show.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
