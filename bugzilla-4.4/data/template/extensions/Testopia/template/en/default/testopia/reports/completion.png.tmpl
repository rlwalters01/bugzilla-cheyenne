use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/reports/completion.png.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
#line 22 "extensions/Testopia/template/en/default/testopia/reports/completion.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('null')
                  || $context->throw($context->error);
    
#line 22 "extensions/Testopia/template/en/default/testopia/reports/completion.png.tmpl"
    # USE
    $stash->set('my_graph',
                $context->plugin('GD.Graph.bars3d', [ 275, 250 ]));
#line 22 "extensions/Testopia/template/en/default/testopia/reports/completion.png.tmpl"
    $output .=  $stash->get(['my_graph', 0, 'set', [ { 'y_label' => 'Total Cases', 'title' => 'Run Completion', 'y_tick_number' => 8, 'y_label_skip' => 2, 'x_min_value' => 0, 'y_min_value' => 0, 'y_max_value' => $stash->get('total') ? $stash->get('total') : 1, 'box_axis' => 0, 'line_width' => 3, 'x_label_position' => 1, 'y_label_position' => 1, 'transparent' => 0, 'dclrs' => $stash->get('colors') } ]]);
#line 22 "extensions/Testopia/template/en/default/testopia/reports/completion.png.tmpl"
    $output .=  $stash->get(['my_graph', 0, 'set_legend', [ $stash->get('legend') ]]);
#line 22 "extensions/Testopia/template/en/default/testopia/reports/completion.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('stdout', [ 1 ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['my_graph', 0, 'plot', [ $stash->get('data') ], 'png', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
