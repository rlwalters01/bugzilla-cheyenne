use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/reports/bug-count.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 25 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    $output .=  $context->process('testopia/style.none.tmpl');
#line 28 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    if (!($stash->get('stripheader'))) {
#line 27 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    }
    
    $output .=  "\n<h1>";
#line 29 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('qname');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</h1>\n<h4>Bug Report for Runs: ";
#line 33 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['runs', 0, 'split', [ ',' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'r'} = $_tt_value;
    $output .=  "\n <a href=\"tr_show_run.cgi?run_id=";
#line 32 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 32 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>&nbsp;";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " ";
#line 39 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    if ($stash->get('plans')) {
    $output .=  "\n <br>In Plans: ";
#line 38 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plans', 0, 'split', [ ',' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'r'} = $_tt_value;
    $output .=  "\n   <a href=\"tr_show_plan.cgi?run_id=";
#line 37 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 37 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>&nbsp;";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " ";
    }
    
    $output .=  "</h4>\n\n<div id=\"bug_count_report";
#line 41 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('uid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"></div>\n<script type=\"text/javascript\">\n    \n    var bug_list = new Testopia.BugReport({\n            run_ids: '";
#line 45 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('runs') || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            plan_ids: '";
#line 46 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('plans') || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "'\n        });\n    bug_list.render('bug_count_report";
#line 48 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('uid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "');\n    bug_list.store.load();\n\n</script>\n";
#line 55 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    if (!($stash->get('stripheader'))) {
#line 54 "extensions/Testopia/template/en/default/testopia/reports/bug-count.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
