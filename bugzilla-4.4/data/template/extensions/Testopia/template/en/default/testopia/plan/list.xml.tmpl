use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/plan/list.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  ";
#line 21 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
#line 22 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    $output .=  $context->process('testopia/export/xml.header.tmpl');
#line 23 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    $stash->set('header_done', 1);
    $output .=  "\n";
#line 27 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['table', 0, 'list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'plan'} = $_tt_value;
#line 26 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    $output .=  $context->process('testopia/plan/show.xml.tmpl');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 29 "extensions/Testopia/template/en/default/testopia/plan/list.xml.tmpl"
    $output .=  $context->process('testopia/export/xml.footer.tmpl');
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
