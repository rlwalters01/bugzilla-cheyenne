use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/case/new-bug.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "<?xml version=\"1.0\"?>\n<text>\n<newbug>\n    <product>";
#line 4 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('caserun') ? $stash->get(['caserun', 0, 'run', 0, 'plan', 0, 'product', 0, 'name', 0]) : $stash->get(['case', 0, 'plans', 0, 0, 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</product>\n    <case_id>";
#line 5 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</case_id>\n    <version>";
#line 6 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('caserun') ? $stash->get(['caserun', 0, 'run', 0, 'plan', 0, 'product_version', 0]) : $stash->get(['case', 0, 'plans', 0, 0, 0, 'product_version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</version>\n    <component>";
#line 7 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'components', 0, 0, 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</component>\n    <short_desc><![CDATA[[Test Case ";
#line 8 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "] ";
#line 8 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></short_desc>\n    <comment><![CDATA[";
#line 11 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    if ($stash->get('caserun')) {
    $output .=  "STATUS: ";
#line 9 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    $output .=  $stash->get(['caserun', 0, 'status', 0]);
    $output .=  "\nBUILD: ";
#line 10 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['caserun', 0, 'build', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\nENVIRONMENT: ";
#line 11 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['caserun', 0, 'environment', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\nSTEPS TO REPRODUCE: ";
#line 12 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'action', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n\nEXPECTED OUTCOME: ";
#line 14 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'effect', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></comment>\n    <assigned_to>";
#line 15 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'components', 0, 0, 0, 'default_assignee', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</assigned_to>\n    <qa_contact>";
#line 16 "extensions/Testopia/template/en/default/testopia/case/new-bug.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'components', 0, 0, 0, 'default_qa_contact', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</qa_contact>\n</newbug>\n</text>";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
