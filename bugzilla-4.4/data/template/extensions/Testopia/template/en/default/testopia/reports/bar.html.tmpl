use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/reports/bar.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 25 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    $output .=  $context->process('testopia/style.none.tmpl');
#line 29 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    if (!($stash->get('stripheader'))) {
#line 27 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    $stash->set('title', 'Worst Offender Report');
#line 28 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    }
    
    $output .=  "\n<h1>";
#line 30 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('qname');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</h1>\n<h4>Worst Offender Report for Runs: ";
#line 34 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['runs', 0, 'split', [ ',' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'r'} = $_tt_value;
    $output .=  "\n <a href=\"tr_show_run.cgi?run_id=";
#line 33 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 33 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>&nbsp;";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " ";
#line 40 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    if ($stash->get('plans')) {
    $output .=  "\n <br>In Plans: ";
#line 39 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plans', 0, 'split', [ ',' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'r'} = $_tt_value;
    $output .=  "\n   <a href=\"tr_show_plan.cgi?run_id=";
#line 38 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 38 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('r');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>&nbsp;";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " ";
    }
    
    $output .=  "</h4>\n<div id=\"chart_report";
#line 41 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('uid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"></div>\n<script type=\"text/javascript\">";
#line 45 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    if (!($stash->get('stripheader'))) {
    $output .=  "\nExt.onReady(function(){";
    }
    
    $output .=  "\n    var store = new Ext.data.JsonStore({\n        id: 'chart_store',\n        fields:['top', 'case_id'],\n        data: ";
#line 49 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('data');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    });\n    var chart = new Ext.Panel({\n            run_ids: '";
#line 52 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('runs') || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            plan_ids: '";
#line 53 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('plans') || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            id: 'bar_chart";
#line 54 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('uid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            height: 300,\n            layout: 'fit',\n            yAxis: new Ext.chart.NumericAxis({\n                displayName: 'Failures',\n                labelRenderer : Ext.util.Format.numberRenderer('0,0')\n            }),\n\n            items: {\n                xtype: 'columnchart',\n                store: store,\n                xField: 'case_id',\n                series:[{\n                    type:'column',\n                    displayName: \"Worst Offenders\",\n                    yField: 'top',\n                    color: '0xee0000'\n                }],\n                tipRenderer : function(chart, record, index, series){\n                    return Ext.util.Format.number(record.data.top, '0,0') + ' Failures for case ' + record.data.case_id;\n                },\n                chartStyle: {\n                    padding: 10,\n                    animationEnabled: true,\n                    font: {\n                        name: 'Tahoma',\n                        color: 0x444444,\n                        size: 11\n                    },\n                    dataTip: {\n                        padding: 5,\n                        border: {\n                            color: 0x99bbe8,\n                            size:1\n                        },\n                        background: {\n                            color: 0xDAE7F6,\n                            alpha: .9\n                        },\n                        font: {\n                            name: 'Tahoma',\n                            color: 0x15428B,\n                            size: 10,\n                            bold: true\n                        }\n                    },\n                    xAxis: {\n                        color: 0x69aBc8,\n                        majorTicks: {color: 0x69aBc8, length: 4},\n                        minorTicks: {color: 0x69aBc8, length: 2},\n                        majorGridLines: {size: 1, color: 0xeeeeee}\n                    },\n                    yAxis: {\n                        color: 0x69aBc8,\n                        majorTicks: {color: 0x69aBc8, length: 4},\n                        minorTicks: {color: 0x69aBc8, length: 2},\n                        majorGridLines: {size: 1, color: 0xdfe8f6}\n                    }\n                },\n            },\n        });\n    chart.render('chart_report";
#line 115 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('uid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "');";
#line 118 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    if (!($stash->get('stripheader'))) {
    $output .=  "\n});";
    }
    
    $output .=  "\n</script>\n";
#line 123 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    if (!($stash->get('stripheader'))) {
#line 122 "extensions/Testopia/template/en/default/testopia/reports/bar.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
