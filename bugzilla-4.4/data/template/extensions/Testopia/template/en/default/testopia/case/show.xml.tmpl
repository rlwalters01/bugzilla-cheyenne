use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/case/show.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
#line 26 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    if (! $stash->get('header_done')) {
#line 24 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
#line 25 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $context->process('testopia/export/xml.header.tmpl');
    }
    
    $output .=  "\n\n        <tr:testcase id=\"";
#line 28 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n            <tr:alias>";
#line 29 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'alias', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:alias>\n            <tr:summary>";
#line 30 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:summary>\n            <tr:case_status id=\"";
#line 31 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'case_status_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 31 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:case_status>\n            <tr:priority id=\"";
#line 32 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'priority_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 32 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'priority', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:priority>\n            <tr:category id=\"";
#line 33 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'category_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <tr:name>";
#line 34 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'category', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n                <tr:product id=\"";
#line 35 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'category', 0, 'product', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 35 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'category', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:product>\n            </tr:category>\n            <tr:author id=\"";
#line 37 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'author_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <tr:login>";
#line 38 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'author', 0, 'login_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:login>\n                <tr:name>";
#line 39 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'author', 0, 'realname', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n            </tr:author>";
#line 46 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    if ($stash->get('default_tester')) {
    $output .=  "\n            <tr:default_tester id=\"";
#line 42 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'default_tester_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <tr:login>";
#line 43 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'default_tester', 0, 'login_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:login>\n                <tr:name>";
#line 44 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'default_tester', 0, 'realname', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n            </tr:default_tester>";
    }
    
    $output .=  "\n            <tr:creation_date>";
#line 47 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'creation_date', 0, 'replace', [ ' ', 'T' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:creation_date>\n            <tr:last_changed>";
#line 48 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'last_changed', 0, 'replace', [ ' ', 'T' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:last_changed>\n            <tr:estimated_time>";
#line 49 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'estimated_time', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:estimated_time>\n            <tr:isautomated>";
#line 50 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'isautomated', 0]) ? 'true' : 'false';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:isautomated>\n            <tr:script>";
#line 51 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'sortkey', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:script>\n            <tr:arguments>";
#line 52 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'arguments', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:arguments>\n            <tr:sortkey>";
#line 53 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'sortkey', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:sortkey>            \n            <tr:requirement>";
#line 54 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'requirement', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:requirement>\n            <tr:run_count>";
#line 55 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'run_count', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:run_count>";
#line 58 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'tags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'t'} = $_tt_value;
    $output .=  "\n            <tr:tag>";
#line 57 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['t', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:tag>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n            <tr:blocks>";
#line 59 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $stash->get(['case', 0, 'blocked_list', 0]);
    $output .=  "</tr:blocks>\n            <tr:dependson>";
#line 60 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $stash->get(['case', 0, 'dependson_list', 0]);
    $output .=  "</tr:dependson>\n            <tr:bugs>";
#line 61 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $stash->get(['case', 0, 'bug_list', 0]);
    $output .=  "</tr:bugs>\n            <tr:linked_plans>";
#line 62 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $stash->get(['case', 0, 'plan_list', 0]);
    $output .=  "</tr:linked_plans>";
#line 68 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'i'} = $_tt_value;
    $output .=  "\n            <tr:component id=\"";
#line 64 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['i', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <tr:name>";
#line 65 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['i', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n                <tr:product id=\"";
#line 66 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['i', 0, 'product_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 66 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['i', 0, 'product_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:product>\n            </tr:component>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n            <tr:text version=\"";
#line 69 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <tr:author>";
#line 70 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'author', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:author>\n                <tr:action><![CDATA[";
#line 71 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'action', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></tr:action>\n                <tr:expected_result><![CDATA[";
#line 72 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'effect', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></tr:expected_result>\n                <tr:setup><![CDATA[";
#line 73 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'setup', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></tr:setup>\n                <tr:breakdown><![CDATA[";
#line 74 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'breakdown', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></tr:breakdown>\n            </tr:text>";
#line 78 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'attachments', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'a'} = $_tt_value;
    $output .=  "\n                ";
#line 77 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $context->process('testopia/attachment/show.xml.tmpl');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </tr:testcase>";
#line 82 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    if (! $stash->get('header_done')) {
#line 81 "extensions/Testopia/template/en/default/testopia/case/show.xml.tmpl"
    $output .=  $context->process('testopia/export/xml.footer.tmpl');
    }
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
