use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/case/show.print.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  \n<html>\n  <head>\n    <title>Test Case ";
#line 23 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " - ";
#line 23 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</title>\n    <link href=\"testopia/css/print.css\" rel=\"stylesheet\" type=\"text/css\"/>\n  </head>\n</html>\n<h1>Test Case ";
#line 27 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " - ";
#line 27 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</h1>\n<table>\n  <tr>\n    <td class=\"print_table_bold\">Author:</td>\n    <td class=\"print_table_body\">";
#line 31 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'author', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Created:</td>\n    <td class=\"print_table_body\">";
#line 33 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'creation_date', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Default Tester:</td>\n    <td class=\"print_table_body\">";
#line 37 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'default_tester', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Priority:</td>\n    <td class=\"print_table_body\">";
#line 39 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'priority', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Requirement:</td>\n    <td class=\"print_table_body\">";
#line 43 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'requirement', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Case Text Version:</td>\n    <td class=\"print_table_body\">";
#line 45 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Status:</td>\n    <td class=\"print_table_body\">";
#line 49 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Category:</td>\n    <td class=\"print_table_body\">";
#line 51 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'category', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n</table>\n<table>\n  <tr>\n    <th>Components</th>\n    <th>Tags</th>\n  </tr>\n  <tr>\n    <td>";
#line 63 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'component'} = $_tt_value;
#line 62 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['component', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </td>\n    <td>";
#line 68 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'tags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'tag'} = $_tt_value;
#line 67 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['tag', 0, 'tag_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </td>\n  </tr>\n</table>\n<table>\n  <tr>\n    <th colspan=\"3\" >";
#line 74 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</th>\n  </tr>\n  <tr>\n    <th>ID</th><th>Summary</th>\n  </tr>";
#line 84 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['case', 0, 'bugs', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
    $output .=  "\n  <tr>\n    <td>";
#line 81 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'bug_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " </td>\n    <td>";
#line 82 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n<hr>\n<h3>Statistics</h3>\n<img src=\"tr_case_reports.cgi?case_id=";
#line 88 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&type=status-breakdown\">\n<hr>\n<h3>Setup</h3>";
#line 91 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'setup', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n<h3>Action</h3>";
#line 93 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'action', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n<h3>Expected Results</h3>";
#line 95 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'effect', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n<h3>Breakdown</h3>";
#line 97 "extensions/Testopia/template/en/default/testopia/case/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'breakdown', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
