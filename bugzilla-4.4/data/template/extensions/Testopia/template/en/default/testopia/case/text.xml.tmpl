use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/case/text.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "<?xml version=\"1.0\"?>\n<cases>\n  <casetext>\n    <setup><![CDATA[";
#line 4 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'setup', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></setup>\n    <breakdown><![CDATA[";
#line 5 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'breakdown', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></breakdown>\n    <version>";
#line 6 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</version>\n    <action><![CDATA[";
#line 7 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'action', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></action>\n    <effect><![CDATA[";
#line 8 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'effect', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></effect>\n    <case_id>";
#line 9 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'case_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</case_id>\n    <author>";
#line 10 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'author', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</author>\n    <notes><![CDATA[";
#line 11 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'notes', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></notes>\n    <summary><![CDATA[";
#line 12 "extensions/Testopia/template/en/default/testopia/case/text.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></summary>\n  </casetext>\n</cases>";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
