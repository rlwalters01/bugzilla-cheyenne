use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'hook/bug/create/created-message.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 5 "extensions/Testopia/template/en/default/hook/bug/create/created-message.html.tmpl"
    if ($stash->get('caserun')) {
    $output .=  "\n<h4 style=\"color:#C00;\">";
#line 4 "extensions/Testopia/template/en/default/hook/bug/create/created-message.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " attached to <a href=\"tr_show_case.cgi?case_id=";
#line 4 "extensions/Testopia/template/en/default/hook/bug/create/created-message.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Test case ";
#line 4 "extensions/Testopia/template/en/default/hook/bug/create/created-message.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a></h4>";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
