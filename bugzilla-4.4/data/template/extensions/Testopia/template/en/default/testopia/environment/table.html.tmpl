use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/environment/table.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 1 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $stash->set('link', ($stash->get(['table', 0, 'get_order_url', 0]) . "&order="));
    $output .=  "\n";
#line 27 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get('DECORATIVE_BORDER_BEGIN');
    $output .=  " \n<table>\n  <tr class=\"bz_row_header\">\n    <th><a href=\"";
#line 30 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get('link');
    $output .=  "environment_id\">ID</a></th>\n    <th><a href=\"";
#line 31 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get('link');
    $output .=  "name\">Name</th>\n    <th><a href=\"";
#line 32 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get('link');
    $output .=  "product\">Product</th>\n    <th>Actions</th>\n  </tr>";
#line 49 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['table', 0, 'list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'env'} = $_tt_value;
    $output .=  "\n  <tr class=\"";
#line 36 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get(['loop', 0, 'count', 0]) % 2 eq 0 ? 'tr_row_odd' : 'tr_row_even';
    $output .=  "\" onclick=\"sr(";
#line 36 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get(['loop', 0, 'count', 0]);
    $output .=  ");\">\n    <td align=\"center\"><a href=\"tr_environments.cgi?env_id=";
#line 37 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 37 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a></td>\n    <td>";
#line 38 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td>";
#line 39 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td>";
#line 43 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    if ($stash->get(['env', 0, 'edit', 0])) {
    $output .=  "\n    <a href=\"tr_environments.cgi?env_id=";
#line 42 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&action=";
#line 42 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get(['env', 0, 'isactive', 0]) ? 'hide' : 'unhide';
    $output .=  "\">";
#line 42 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get(['env', 0, 'isactive', 0]) ? 'Archive' : 'Unarchive';
    $output .=  "</a>";
    }
    
#line 47 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    if ($stash->get(['env', 0, 'candelete', 0])) {
    $output .=  "    \n      &nbsp;|&nbsp;\n      <a href=\"tr_environments.cgi?env_id=";
#line 46 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['env', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&action=delete\">Delete</a>";
    }
    
    $output .=  "\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>";
#line 51 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $context->process('navigation');
#line 52 "extensions/Testopia/template/en/default/testopia/environment/table.html.tmpl"
    $output .=  $stash->get('DECORATIVE_BORDER_END');
    $output .=  " \n\n<br>\n<a href=\"tr_new_environment.cgi\">Create a New Environment</a>";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
