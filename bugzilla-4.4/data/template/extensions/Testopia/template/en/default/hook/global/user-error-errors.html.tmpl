use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'hook/global/user-error-errors.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  ";
#line 198 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('error') eq 'testopia-permission-denied') {
#line 22 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Insufficient Permissions');
    $output .=  "\n    You are not authorized to view ";
#line 23 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;";
#line 23 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('error') eq 'testopia-read-only') {
#line 25 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Insufficient Permissions');
    $output .=  "\n    You are not authorized to edit ";
#line 26 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;";
#line 26 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
#line 29 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get(['object', 0, 'type', 0]) eq 'caserun') {
    $output .=  "\n    Only test runs in the RUNNING state may be updated. Otherwise, ";
    }
    
    $output .=  "\n    Contact the plan administrator to grant rights to update these ";
#line 30 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "s";
    }
    elsif ($stash->get('error') eq 'testopia-no-delete') {
#line 32 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Insufficient Permissions');
    $output .=  "\n    You are not authorized to delete ";
#line 33 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;";
#line 33 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['object', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
#line 38 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'admin' ]])) {
    $output .=  "\n    If you are the administrator, you can check that your installation\n    allows deletion of Testopia objects in the <a href=\"editparams.cgi\">paramaters </a>\n    and then add delete rights to your plan on the \"Permissions\" tab.";
    }
    
    }
    elsif ($stash->get('error') eq 'testopia-create-denied') {
#line 40 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Cannot Create Object');
    $output .=  "\n    You do not have sufficient rights to create new ";
#line 41 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('object');
        
        &$_tt_filter($output);
    };
    
    $output .=  "s ";
#line 42 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('plan')) {
    $output .=  " for plan ";
#line 42 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get(['plan', 0, 'id', 0]);
    }
    
    $output .=  ".";
    }
    elsif ($stash->get('error') eq 'testopia-missing-parameter') {
#line 44 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Missing Parameter');
    $output .=  "\n    Missing required parameter ";
#line 45 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('param');
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('error') eq 'testopia-non-zero-case-count') {
#line 47 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Category Has Test Cases');
    $output .=  "\n    You have attempted to delete a category that still has test cases \n    associated with it.\n    Please move the test cases to another category first.";
    }
    elsif ($stash->get('error') eq 'testopia-non-zero-run-count') {
#line 1 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', ($stash->get('object') . " Has Test Runs"));
    $output .=  "\n    You have attempted to delete a ";
#line 53 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('object');
        
        &$_tt_filter($output);
    };
    
    $output .=  " that has test runs \n    associated with it.";
    }
    elsif ($stash->get('error') eq 'testopia-non-zero-case-run-count') {
#line 56 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Build Has Case Runs');
    $output .=  "\n    You have attempted to delete a build that still has test case runs \n    associated with it. This is historical data and should not be removed.";
    }
    elsif ($stash->get('error') eq 'testopia-invalid-test-id-or-alias') {
#line 60 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Invalid ID or Alias');
    $output .=  "\n    The test case you entered does not exist.";
    }
    elsif ($stash->get('error') eq 'invalid-test-id-non-existent') {
#line 63 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Invalid ID');
#line 68 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('type') eq 'case_run') {
    $output .=  "\n      The specified case-run does not exist.";
    }
    else {
    $output .=  "\n      Test ";
#line 67 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;";
#line 67 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " does not exist.";
    }
    
    }
    elsif ($stash->get('error') eq 'testopia-name-not-unique') {
#line 70 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Name Must be Unique');
    $output .=  "\n    The name you chose, ";
#line 71 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", for this ";
#line 72 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('object');
        
        &$_tt_filter($output);
    };
    
    $output .=  " must be unique. Another ";
#line 72 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('object');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    of the same name already exists. Please choose a different one.";
    }
    elsif ($stash->get('error') eq 'testopia-create-category') {
#line 75 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'No Categories Defined');
    $output .=  "\n    No categories have been created for this product yet.";
#line 80 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('plan')) {
    $output .=  "\n    You can create categories <a href=\"tr_categories.cgi?product_id=";
#line 78 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    here</a>.";
    }
    
    }
    elsif ($stash->get('error') eq 'testopia-create-build') {
#line 82 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'No Builds Defined');
    $output .=  "\n    No builds have been created for this product yet.";
#line 87 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('plan')) {
    $output .=  "\n    You can create builds <a href=\"tr_builds.cgi?product_id=";
#line 85 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    here</a>.";
    }
    
    }
    elsif ($stash->get('error') eq 'testopia-create-environment') {
#line 89 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'No Environments Defined');
    $output .=  "\n    No environments have been created yet.\n    You can create environments <a href=\"tr_new_environment.cgi\">here</a>.";
    }
    elsif ($stash->get('error') eq 'testopia-missing-required-field') {
#line 93 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Missing Required Field');
    $output .=  "\n    It seems there was either no value entered for ";
#line 94 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", or the value entered\n    did not match any known values.";
    }
    elsif ($stash->get('error') eq 'testopia-missing-plans-list') {
#line 97 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Plan list missing');
    $output .=  "\n    Somehow the list of plans associated with the test case to be cloned is missing. \n    Please try again.";
    }
    elsif ($stash->get('error') eq 'testopia-unkown-object') {
#line 101 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Unkown Object');
    $output .=  "\n    Attempted to attach tags to something other than a Test Plan, Test Case or Test Run.";
    }
    elsif ($stash->get('error') eq 'testopia-element-in-use') {
#line 104 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Element in Use');
    $output .=  "\n    The selected element is being used in one or more environments. \n    Please ";
#line 106 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if (! $stash->get('delete')) {
    $output .=  "create a new one or ";
    }
    
    $output .=  "\n    remove it from existing environments before performing this operation.";
    }
    elsif ($stash->get('error') eq 'testopia-invalid-char') {
#line 109 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Invalid Character');
    $output .=  "\n    Valid names for values cannot contain '|' characters.";
    }
    elsif ($stash->get('error') eq 'testiopia-alias-exists') {
#line 112 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Alias Unavailable');
    $output .=  "\n    The alias '";
#line 113 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is already in use by another test case, please\n    select another one.";
    }
    elsif ($stash->get('error') eq 'testiopia-invalid-data') {
#line 116 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Invalid Option Selected');
    $output .=  "\n    The field ";
#line 117 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$_tt_filter($output);
    };
    
    $output .=  " has and invalid value of ";
#line 117 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('error') eq 'testopia-none-selected') {
#line 119 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Nothing Selected');
    $output .=  "\n    You did not select any ";
#line 120 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('object');
        
        &$_tt_filter($output);
    };
    
    $output .=  "s to change.";
    }
    elsif ($stash->get('error') eq 'testopia-query-too-large') {
    $output .=  "\n    This query returns more than ";
#line 122 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('limit');
        
        &$_tt_filter($output);
    };
    
    $output .=  " rows. <br>\n    Please do one of the following:\n    <ol>\n      <li>Try to narrow your search.</li>\n      <li>Try using the pagesize and page URL paramaters to limit your results.</li>\n      <li>Use the XML-RPC Interface.</li>\n    </ol>";
    }
    elsif ($stash->get('error') eq 'missing-plans-list') {
#line 130 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'No plans selected');
    $output .=  "\n    You did not select any plans to copy or link this case to.";
    }
    elsif ($stash->get('error') eq 'testopia-tester-already-on-list') {
#line 133 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Selected user is already on the list');
    $output .=  "\n    The user ";
#line 134 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('login');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is already a member of the ACL for this plan.";
    }
    elsif ($stash->get('error') eq 'testopia-plan-acl-denied') {
#line 136 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Plan Administrator Privileges Required');
    $output .=  "\n    You must be an administrator of this test plan to modify the access control list. ";
    }
    elsif ($stash->get('error') eq 'testopia-no-admins') {
#line 139 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Plan Must Have at Least One Admin');
    $output .=  "\n    There do not seem to be any admins selected. You must select at least one admin for this test plan.";
    }
    elsif ($stash->get('error') eq 'testopia-format-error') {
#line 142 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Field format error');
#line 143 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get('field');
    $output .=  " is not formatted correctly.";
    }
    elsif ($stash->get('error') eq 'plan-has-children') {
#line 145 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Plan has Children');
    $output .=  "\n    This test plan has children and so it is not possible to change the product.\n    You may wish to clone the plan instead.";
    }
    elsif ($stash->get('error') eq 'testopia-no-status') {
#line 149 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Permission Denied');
    $output .=  "\n    You must either be the run manager or a plan administrator to change ";
#line 157 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('field') eq 'status') {
    $output .=  "\n      the status of a run.";
    }
    elsif ($stash->get('field') eq 'manager') {
    $output .=  "\n      the run manager";
    }
    elsif ($stash->get('field') eq 'target') {
    $output .=  "\n      the target pass or completion rates";
    }
    
    }
    elsif ($stash->get('error') eq 'testopia-update-failed') {
#line 1 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', ("One or more of your test " . $stash->get('object') . " failed to update"));
    $output .=  "\n    Update of one or more of your ";
#line 160 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get('object');
    $output .=  "s failed. The most likely cause is that you don't have permissions\n    to update them. ";
#line 164 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('object') eq 'case-run') {
    $output .=  "\n      If the case is in the RUNNING state, only the assignee may update it. Otherwise,";
    }
    
    $output .=  "\n    Contact the plan administrator to grant rights to update these ";
#line 165 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get('object');
    $output .=  "s.\n    <p>\n    The id's of those that failed are: ";
#line 167 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('list');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    </p>";
    }
    elsif ($stash->get('error') eq 'testopia-delete-failed') {
#line 1 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', ("One or more of your test " . $stash->get('object') . " failed to be deleted"));
    $output .=  "\n    Deleting one or more of your ";
#line 171 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get('object');
    $output .=  "s failed. The most likely cause is that you don't have permissions\n    to delete them. Your administrator must also have the \"allow-test-deletion\" set to \"On\".  ";
    }
    elsif ($stash->get('error') eq 'testopia-unknown-tag') {
    $output .=  "\n    The tag \"";
#line 174 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" does not exist.";
    }
    elsif ($stash->get('error') eq 'testopia-regexp-too-inclusive') {
    $output .=  "\n    You are attempting to allow access to your test plan to more people than the limit set by your administrator allows.\n    Please contatct your administrator.";
    }
    elsif ($stash->get('error') eq 'testopia-unknown-tab') {
    $output .=  "\n    I don't know what a ";
#line 179 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('tab');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is.";
    }
    elsif ($stash->get('error') eq 'invalid_import_type') {
    $output .=  "\n    Invalid file type. Only CSV and XML files can be imported (.csv or .xml extension). You uploaded a ";
#line 181 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  " file.";
    }
    elsif ($stash->get('error') eq 'import_repeat') {
    $output .=  "\n    It appears you tried to import the same file twice.";
    }
    elsif ($stash->get('error') eq 'csv_parse_failure') {
    $output .=  "\n    There was an error parsing the input. Please verify that the CSV is valid.\n    The Error was on row ";
#line 186 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('row');
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('error') eq 'testopia_component_attached') {
    $output .=  "\n    The component you are attemting to add is already attached to this case.";
    }
    elsif ($stash->get('error') eq 'testopia-no-action') {
    $output .=  "\n    I give up. What were you trying to do?\n    Either there was no action specified, or I didn't recognize it.";
    }
    elsif ($stash->get('error') eq 'invalid_target') {
    $output .=  "\n    Target Completion and Pass rates must be a number between 0 and 100 inclusive.";
    }
    elsif ($stash->get('error') eq 'import_parse_error') {
    $output .=  "\n    Parsing ";
#line 195 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  " Failed!<br/>\n    The error returned was:\n    <pre>";
#line 197 "extensions/Testopia/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('msg');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</pre>";
    }
    
    $output .=  "\n  \n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
