use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/reports/report.csv.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
#line 24 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 26 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('colsepchar', $stash->get(['user', 0, 'settings', 0, 'csv_colsepchar', 0, 'value', 0]));
#line 27 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # CAPTURE
    $stash->set('num_bugs', do {
        my $output = '';
    $output .=  "Number of ";
#line 27 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
        $output;
    });
    
#line 28 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('tbl_field_disp', $stash->get(['field_descs', 0, $stash->get('tbl_field'), 0]) || $stash->get(['report', 0, 'tbl_field', 0]));
#line 29 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('col_field_disp', $stash->get(['field_descs', 0, $stash->get('col_field'), 0]) || $stash->get(['report', 0, 'col_field', 0]));
#line 30 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('row_field_disp', $stash->get(['field_descs', 0, $stash->get('row_field'), 0]) || $stash->get(['report', 0, 'row_field', 0]));
#line 31 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('grand_total', 0);
    $output .=  "\n";
#line 35 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'tbl_field', 0])) {
#line 34 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('tbl_field_disp');
        
        &$_tt_filter($output);
    };
    
    $output .=  ": ";
#line 34 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('tbl');
        
        &$_tt_filter($output);
    };
    
    }
    
#line 38 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'row_field', 0])) {
#line 37 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('row_field_disp');
        
        &$_tt_filter($output);
    };
    
    }
    
#line 39 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'col_field', 0]) && $stash->get(['report', 0, 'row_field', 0])) {
    $output .=  ' / ';
    }
    
#line 40 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('col_field_disp');
        
        &$_tt_filter($output);
    };
    
#line 57 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'col_field', 0])) {
#line 52 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['report', 0, 'col_names', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 43 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set(['col_totals', 0, $stash->get('col'), 0], 0);
#line 44 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 51 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'col_field', 0]) eq 'bug_status') {
#line 46 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status_descs', 0, $stash->get('col'), 0]);
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('col_field') eq 'resolution') {
#line 48 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['resolution_descs', 0, $stash->get('col'), 0]);
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 50 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('col');
        
        &$_tt_filter($output);
    };
    
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 53 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 54 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  'Total';
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 56 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 56 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num_bugs');
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\n";
#line 76 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['report', 0, 'row_names', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'row'} = $_tt_value;
#line 60 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('row_total', 0);
#line 61 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('row');
        
        &$_tt_filter($output);
    };
    
#line 71 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['report', 0, 'col_names', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 63 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('row_total', $stash->get('row_total') + $stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0, $stash->get('col'), 0, $stash->get('row'), 0]));
#line 64 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 70 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0]) && $stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0, $stash->get('col'), 0]) && $stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0, $stash->get('col'), 0, $stash->get('row'), 0])) {
#line 66 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set(['col_totals', 0, $stash->get('col'), 0], $stash->get(['col_totals', 0, $stash->get('col'), 0]) + $stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0, $stash->get('col'), 0, $stash->get('row'), 0]));
#line 67 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get(['report', 0, 'data', 0, $stash->get('tbl'), 0, $stash->get('col'), 0, $stash->get('row'), 0]);
    }
    else {
    $output .=  "0";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 72 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 73 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('row_total');
#line 74 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  ('' . "\n");
#line 75 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $stash->set('grand_total', $stash->get('grand_total') + $stash->get('row_total'));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 77 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('csv')
                  || $context->throw($context->error);
    
    $output .=  'Total';
        
        &$_tt_filter($output);
    };
    
#line 82 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['report', 0, 'col_names', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 79 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    if ($stash->get('col') eq '') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 80 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 81 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get(['col_totals', 0, $stash->get('col'), 0]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 83 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('colsepchar');
#line 84 "extensions/Testopia/template/en/default/testopia/reports/report.csv.tmpl"
    $output .=  $stash->get('grand_total');
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
