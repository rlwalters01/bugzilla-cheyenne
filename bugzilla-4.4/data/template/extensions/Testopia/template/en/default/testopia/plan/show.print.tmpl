use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/plan/show.print.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  \n<html>\n  <head>\n    <title>Test Plan ";
#line 23 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " - ";
#line 23 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</title>\n    <link href=\"extensions/Testopia/css/print.css\" rel=\"stylesheet\" type=\"text/css\"/>\n  </head>\n</html>\n<h1>Test Plan ";
#line 27 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " - ";
#line 27 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</h1>\n<table>\n  <tr>\n    <td class=\"print_table_bold\">Author:</td>\n    <td class=\"print_table_body\">";
#line 31 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'author', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Created:</td>\n    <td class=\"print_table_body\">";
#line 33 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'creation_date', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Product:</td>\n    <td class=\"print_table_body\">";
#line 37 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Product Version:</td>\n    <td class=\"print_table_body\">";
#line 39 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'default_product_version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Plan Type:</td>\n    <td class=\"print_table_body\">";
#line 43 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Plan Text Version:</td>\n    <td class=\"print_table_body\">";
#line 45 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n  <tr>\n    <td class=\"print_table_bold\">Total Test Cases:</td>\n    <td class=\"print_table_body\">";
#line 49 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case_table', 0, 'list_count', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td class=\"print_table_bold\">Total Test Runs:</td>\n    <td class=\"print_table_body\">";
#line 51 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run_table', 0, 'list_count', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n  </tr>\n</table>\n\n<table>\n  <tr>\n    <th>Tags</th>\n  </tr>\n  <tr>\n    <td>";
#line 63 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'tags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'tag'} = $_tt_value;
#line 62 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['tag', 0, 'tag_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </td>\n  </tr>\n</table>\n<hr>\n<h3>Pass/Fail Rundown By Build</h3>\n<table>\n  <TR>\n    <td>&nbsp;</td>";
#line 74 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_header\">";
#line 73 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </TR>";
#line 83 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'builds_seen', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'build'} = $_tt_value;
    $output .=  "\n  <tr>\n    <td class=\"print_table_row_header\">";
#line 78 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['build', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>";
#line 81 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_data\">";
#line 80 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    $output .=  $stash->get(['percentage', [ $stash->get(['build', 0, 'case_run_count', 0]), $stash->get(['build', 0, 'case_run_count', [ $stash->get(['status', 0, 'id', 0]) ]]) ]]);
    $output .=  "%</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n\n<hr>\n<h3>Pass/Fail Rundown By Environment</h3>\n<table>\n  <TR>\n    <td>&nbsp;</td>";
#line 93 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_header\">";
#line 92 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </TR>";
#line 102 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'environments_seen', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'environment'} = $_tt_value;
    $output .=  "\n  <tr>\n    <td class=\"print_table_row_header\">";
#line 97 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['environment', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>";
#line 100 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_data\">";
#line 99 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    $output .=  $stash->get(['percentage', [ $stash->get(['environment', 0, 'case_run_count', 0]), $stash->get(['environment', 0, 'case_run_count', [ $stash->get(['status', 0, 'id', 0]) ]]) ]]);
    $output .=  "%</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n\n<hr>\n<h3>Pass/Fail Rundown By Run</h3>\n<table>\n  <TR>\n    <td>&nbsp;</td>";
#line 112 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_header\">";
#line 111 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </TR>";
#line 121 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'run'} = $_tt_value;
    $output .=  "\n  <tr>\n    <td class=\"print_table_row_header\">";
#line 116 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>";
#line 119 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_data\">";
#line 118 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    $output .=  $stash->get(['percentage', [ $stash->get(['run', 0, 'case_run_count', 0]), $stash->get(['run', 0, 'case_run_count', [ $stash->get(['status', 0, 'id', 0]) ]]) ]]);
    $output .=  "%</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n<hr>\n<h3>Pass/Fail Totals</h3>\n<table>\n  <TR>\n    <td>&nbsp;</td>";
#line 130 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_header\">";
#line 129 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </TR>\n  <tr>\n    <td class=\"print_table_row_header\">Total</td>";
#line 136 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_runs', 0, 0, 0, 'caseruns', 0, 0, 0, 'get_status_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n    <TD class=\"print_table_data\">";
#line 135 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    $output .=  $stash->get(['percentage', [ $stash->get(['plan', 0, 'test_case_run_count', 0]), $stash->get(['plan', 0, 'test_case_run_count', [ $stash->get(['status', 0, 'id', 0]) ]]) ]]);
    $output .=  "%</TD>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </tr>\n</table>\n\n\n<hr>\n<h3>Plan Document</h3>";
#line 143 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'text', 0, 'plan_text', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n<h3>Test Cases</h3><hr/>";
#line 167 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'test_cases', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'case'} = $_tt_value;
    $output .=  "\n    <table cellpadding=\"5\" width=\"100%\">\n        <tr>\n            <th colspan=\"2\">Case ";
#line 148 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ": ";
#line 148 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th>\n        </tr>\n        <tr>\n            <th>Status: ";
#line 151 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th><th>Priority: ";
#line 151 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'priority', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th>\n        </tr>\n        <tr>\n            <th>Setup</th><th>Breakdown</th>\n        </tr>\n        <tr>\n            <td>";
#line 157 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'setup', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td><td>";
#line 157 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'breakdown', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n        </tr>\n        <tr>\n            <th>Action</th><th>Expected Result</th>\n        </tr>\n        <tr>\n            <td>";
#line 163 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'action', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td><td>";
#line 163 "extensions/Testopia/template/en/default/testopia/plan/show.print.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['case', 0, 'text', 0, 'effect', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n        </tr>\n    </table>\n    <hr/>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
