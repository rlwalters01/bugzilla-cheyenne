use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/plan/access-list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n<script type=\"text/javascript\">\nfunction fireLoad(){\n    Ext.getCmp('plan-permissions').fireEvent('load');\n    if (Ext.get('adduser')){\n        var adduser = new Testopia.User.Lookup({\n            id: 'plan_permission_add_user',\n            hiddenName: 'adduser'\n        });\n        adduser.render('adduser');\n    }\n}\n\nfunction planAccess(o){\n    var form = new Ext.form.BasicForm('plan_access_frm',{});\n    form.on('beforeaction',function(f,a){\n        f.el.mask('Processing...');\n        if (o.action == 'delete'){\n            form.baseParams = o;\n        }\n        else{\n            form.baseParams = {action: o.action};\n        }\n    });\n\n\n    form.submit({\n        url: 'tr_plan_access.cgi',\n        success: function(f,a){\n            Testopia.Util.notify.msg('Test plan updated', 'Test plan {0} was updated successfully', 'Permissions');\n            f.el.unmask();\n            Ext.getCmp('plan-permissions').load({\n                url: 'tr_plan_access.cgi',\n                params: {plan_id: ";
#line 52 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "},\n                scripts: true,\n                callback: fireLoad\n            })\n        },\n        failure: Testopia.Util.error\n    })\n}\n</script>\n  \n<p>\nThis page allows plan managers to permit access to a test plan. By\ndefault, members of the <b>Testers</b> group in ";
#line 64 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " have read\nand write access. Beyond this, login names (email addresses) that\nmatch a given regular expression are granted the level of permissions\nspecified. Lastly, individuals can be granted additional permissions\nby adding them explicitly. (Note: you cannot remove permissions from a\nuser that has those rights by virtue of membership in the Testers group\nor that matches the regular expression, although you can add additional\nrights to that user.)\n</p>\n<br/>\n<form id=\"plan_access_frm\" onsubmit=\"return false\">\n<input type=\"hidden\" name=\"plan_id\" value=\"";
#line 75 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n<h3>Access Method</h3>\n<br/>\n<table>\n  <tr class=\"bz_row_header\">\n    <th>User Regular Expression</th>\n    <th>Read</th>\n    <th>Write</th>\n    <th>Delete</th>\n    <th>Admin</th>\n  </tr>\n  <tr>\n    <td><input name=\"userregexp\" value=\"";
#line 87 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'tester_regexp', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" size=\"70\" ";
#line 87 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  "><br></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 88 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"pr\" ";
#line 88 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'tester_regexp_permissions', 0, 'read', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 89 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"pw\" ";
#line 89 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'tester_regexp_permissions', 0, 'write', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 90 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"pd\" ";
#line 90 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'tester_regexp_permissions', 0, 'delete', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 91 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"pa\" ";
#line 91 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'tester_regexp_permissions', 0, 'admin', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n  </tr>\n</table>\n<br>\n<h3>Access Control List</h3>\n<br/>\n<table>\n  <tr class=\"bz_row_header\">\n    <th>User</th>\n    <th>Read</th>\n    <th>Write</th>\n    <th>Delete</th>\n    <th>Admin</th>\n  </tr>";
#line 116 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['plan', 0, 'access_list', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'row'} = $_tt_value;
    $output .=  "\n  <tr class=\"";
#line 106 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['loop', 0, 'count', 0]) % 2 eq 0 ? 'tr_row_odd' : 'tr_row_even';
    $output .=  "\">\n    <td>";
#line 107 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['row', 0, 'user', 0, 'id', 0]) eq $stash->get(['plan', 0, 'author', 0, 'id', 0])) {
    $output .=  '*';
    }
    
#line 107 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['row', 0, 'user', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 108 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"r";
#line 108 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['row', 0, 'user', 0, 'id', 0]);
    $output .=  "\" ";
#line 108 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['row', 0, 'read', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 109 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"w";
#line 109 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['row', 0, 'user', 0, 'id', 0]);
    $output .=  "\" ";
#line 109 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['row', 0, 'write', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 110 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"d";
#line 110 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['row', 0, 'user', 0, 'id', 0]);
    $output .=  "\" ";
#line 110 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['row', 0, 'delete', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" ";
#line 111 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if (!($stash->get(['plan', 0, 'canadmin', 0]))) {
    $output .=  'disabled="disabled"';
    }
    
    $output .=  " name=\"a";
#line 111 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['row', 0, 'user', 0, 'id', 0]);
    $output .=  "\" ";
#line 111 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['row', 0, 'admin', 0])) {
    $output .=  'checked="checked"';
    }
    
    $output .=  " value=\"1\"></td>";
#line 114 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'canadmin', 0])) {
    $output .=  "\n    <td><input type=\"image\" src=\"extensions/Testopia/img/delete.png\" onclick=\"planAccess({action: 'delete', user: '";
#line 113 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    $output .=  $stash->get(['row', 0, 'user', 0, 'id', 0]);
    $output .=  "',plan_id: ";
#line 113 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['plan', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "})\"> </td>";
    }
    
    $output .=  "\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 128 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'canadmin', 0])) {
    $output .=  "\n  <tr style=\"background-color:#D8E5EE\">\n    <td style=\"padding: 3px;\">\n          <div id=\"adduser\"></div>\n    </td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" name=\"nr\" value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" name=\"nw\" value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" name=\"nd\" value=\"1\"></td>\n    <td align=\"center\"><input type=\"checkbox\" style=\"border: none\" name=\"na\" value=\"1\"></td>\n    <td align=\"left\"><input type=\"button\" onclick=\"planAccess({action: 'add_user'})\" value=\"Add User\"></td>\n  </tr>";
    }
    
    $output .=  "\n</table>\n<p align=\"right\">";
#line 134 "extensions/Testopia/template/en/default/testopia/plan/access-list.html.tmpl"
    if ($stash->get(['plan', 0, 'canadmin', 0])) {
    $output .=  "\n<input type=\"button\" onclick=\"planAccess({action: 'edit'})\" value=\"Apply Changes\">\n</form>";
    }
    
    $output .=  "\n</p>\n<dl>\n  <dt>Read</dt>\n  <dd>Allows viewing rights to the plan and all test cases, test runs, and test case-runs associated with it. \n  Test cases linked to more than one plan will not be visible unless the user has view rights on all plans linked</dd>\n  <dt>Write</dt>\n  <dd>Implies Read. Allows rights to modify the plan and associated cases, runs, and case-runs.</dd>\n  <dt>Delete</dt>\n  <dd>Implies Read and Write. Allows rights to delete the plan and associated cases, runs, and case-runs.</dd>\n  <dt>Admin</dt>\n  <dd>Implies Read, Write, and Delete. Allows rights to modify the plan's access controls (this page).</dd>\n</dl>\n* Plan author\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
