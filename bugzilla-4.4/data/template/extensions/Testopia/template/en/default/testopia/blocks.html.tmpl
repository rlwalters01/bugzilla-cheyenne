use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/blocks.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  \n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  " \n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'navigation' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 50 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('MAX_LIMIT', 10000);
#line 57 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get('ajax')) {
#line 52 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('url', 'javascript:page(');
#line 53 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('pc', ')');
        }
        else {
#line 1 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('url', ($stash->get(['table', 0, 'get_page_url', 0]) . "&pagesize=" . $stash->get(['table', 0, 'page_size', 0]) . "&page="));
        $output .=  "\n   ";
        }
        
#line 164 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if (! $stash->get(['table', 0, 'viewall', 0])) {
#line 59 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('pagesizelist', [ { 'name' => 25, 'id' => 25  }, { 'name' => 50, 'id' => 50  }, { 'name' => 100, 'id' => 100  }, { 'name' => 500, 'id' => 500  } ]);
        $output .=  "\n                   \n<script type='text/javascript'>\n   var ";
#line 65 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'type', 0]);
        $output .=  "Table = {\n  \n    jumpToPage: function (page){\n      var digit = /^\\d+\$/;\n      page = page - 1;\n      if ((page >= ";
#line 70 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page_count', 0]);
        $output .=  ") || (page < 0) || !digit.test(page)){\n        alert('Invalid page number. Please enter a value between 1 and ";
#line 71 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page_count', 0]);
        $output .=  " ');\n        return;\n      }\n      var url = '";
#line 74 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
        $output .=  "' + page;\n      document.location = url;\n    }\n  };\n  function adjustPageSize(psize) {\n    document.location = \"";
#line 79 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'get_page_url', 0]);
        $output .=  "&pagesize=\" + psize;\n  }\n</script>\n\n<table align=\"center\">\n  <tr style=\"background-color: #eeeeee; \">";
#line 91 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['table', 0, 'page', 0]) ne 0) {
        $output .=  "\n    <td><a href=\"";
#line 86 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
        $output .=  "0";
#line 86 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\">&lt;&lt;&nbsp;First</a></td>\n    <td><a href=\"";
#line 87 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
#line 87 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page', 0]) - 1;
#line 87 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\">&lt;&nbsp;Previous</a></td>";
        }
        else {
        $output .=  "\n    <td>&lt;&lt;&nbsp;First</td>\n    <td>&lt;&nbsp;Previous</td>";
        }
        
        $output .=  "\n    <td align=\"center\" style=\"font-size: medium\">";
#line 93 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('framewidth', 10);
#line 110 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if (($stash->get(['table', 0, 'page_count', 0]) - 1) < $stash->get('framewidth')) {
#line 95 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('p', 0);
#line 96 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('frame_end', $stash->get(['table', 0, 'page_count', 0]) - 1);
        }
        elsif (($stash->get(['table', 0, 'page_count', 0]) - $stash->get(['table', 0, 'page', 0])) < ($stash->get('framewidth') / 2)) {
#line 98 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('p', $stash->get(['table', 0, 'page_count', 0]) - $stash->get('framewidth'));
#line 99 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('frame_end', $stash->get(['table', 0, 'page_count', 0]) - 1);
#line 100 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('start_mark', '...');
        }
        elsif ($stash->get(['table', 0, 'page', 0]) < ($stash->get('framewidth') / 2)) {
#line 102 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('p', 0);
#line 103 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('frame_end', $stash->get('framewidth'));
#line 104 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('end_mark', '...');
        }
        else {
#line 106 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('p', $stash->get(['table', 0, 'page', 0]) - ($stash->get('framewidth') / 2));
#line 107 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('frame_end', $stash->get(['table', 0, 'page', 0]) + ($stash->get('framewidth') / 2));
#line 108 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('start_mark', '...');
#line 109 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('end_mark', '...');
        }
        
        $output .=  "\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
#line 112 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('start_mark');
#line 120 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        
        # WHILE
        do {
            my $_tt_failsafe = 1000000;
        WHILE1:
            while (--$_tt_failsafe && ($stash->get('p') <= $stash->get('frame_end'))) {
#line 118 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get('p') ne $stash->get(['table', 0, 'page', 0])) {
        $output .=  "\n      <a href=\"";
#line 115 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
#line 115 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('p');
#line 115 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\">";
#line 115 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('p') + 1;
        $output .=  "</a>&nbsp;";
        }
        else {
#line 117 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('p') + 1;
        }
        
#line 119 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $stash->set('p', $stash->get('p') + 1);
            }
            die "WHILE loop terminated (> 1000000 iterations)\n"
                unless $_tt_failsafe;
        };
        
#line 121 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('end_mark');
        $output .=  "\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    </td>";
#line 130 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['table', 0, 'page', 0]) < $stash->get(['table', 0, 'page_count', 0]) - 1) {
        $output .=  "\n    <td><a href=\"";
#line 125 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
#line 125 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page', 0]) + 1;
#line 125 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\">Next&nbsp;&gt;</a></td>\n    <td><a href=\"";
#line 126 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
#line 126 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page_count', 0]) - 1;
#line 126 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\" title=\"Jump to Page ";
#line 126 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page_count', 0]);
        $output .=  "\">Last&nbsp;&gt;&gt;</a></td>";
        }
        else {
        $output .=  "\n    <td>Next&nbsp;&gt;</td>\n    <td>Last&nbsp;&gt;&gt;</td>";
        }
        
        $output .=  "\n    \n  </tr>\n    <td colspan=\"5\">\n    <input type=\"button\" onclick=\"";
#line 134 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'type', 0]);
        $output .=  "Table.jumpToPage(document.getElementById('jump_";
#line 134 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'type', 0]);
        $output .=  "').value)\" value=\"Jump To Page\">\n    <input id=\"jump_";
#line 135 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'type', 0]);
        $output .=  "\" size=\"4\">\n    &nbsp;Out of ";
#line 136 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'page_count', 0]);
        $output .=  " pages\n    &nbsp;&nbsp;&nbsp;\n    View ";
#line 138 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $context->process('select', { 'sel' => { 'list' => $stash->get('pagesizelist'), 'default' => $stash->get(['table', 0, 'page_size', 0]), 'events' => 'onchange="adjustPageSize(this.value)"'  } });
        $output .=  "\n    records&nbsp;at&nbsp;a&nbsp;time\n    &nbsp;&nbsp;&nbsp;";
#line 151 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get('ajax')) {
        $output .=  "\n    <a href=\"";
#line 144 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
        $output .=  "null,1";
#line 144 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('pc');
        $output .=  "\">View&nbsp;All</a>&nbsp;";
        }
        else {
#line 150 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['table', 0, 'list_count', 0]) < $stash->get('MAX_LIMIT') && $stash->get(['table', 0, 'list_count', 0]) > $stash->get(['table', 0, 'page_size', 0])) {
        $output .=  "\n    <a href=\"";
#line 147 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
        $output .=  "&viewall=1\">View&nbsp;All</a>&nbsp;";
        }
        else {
        $output .=  "\n    <span style=\"color:gray\">View&nbsp;All</span>";
        }
        
        }
        
        $output .=  "\n    </td>\n    \n  </tr>\n  <tr><th colspan=\"5\" style=\"font-size: 12pt;\">";
#line 155 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'list_count', 0]);
        $output .=  " records found ";
#line 155 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get('filtered')) {
        $output .=  '(filtered)';
        }
        
        $output .=  "</th></tr>\n</table>";
        }
        else {
        $output .=  "\n<table align=\"center\">\n  <tr style=\"background-color: #eeeeee; \">\n  <td align=\"center\"><a href=\"";
#line 160 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get('url');
        $output .=  "0\">Paged View</a></td>\n  </tr>\n  <tr><th colspan=\"5\" style=\"font-size: 12pt;\">";
#line 162 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['table', 0, 'list_count', 0]);
        $output .=  " records found ";
#line 162 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get('filtered')) {
        $output .=  '(filtered)';
        }
        
        $output .=  "</th></tr>\n</table>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n    <label for=\"";
#line 27 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'name', 0]);
        $output .=  "\" accesskey=\"";
#line 27 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'accesskey', 0]);
        $output .=  "\"></label>\n      <select name=\"";
#line 28 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'name', 0]);
        $output .=  "\" id=\"";
#line 28 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'id', 0]) || $stash->get(['sel', 0, 'name', 0]);
        $output .=  "\" ";
#line 29 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'mult', 0])) {
        $output .=  ('' . "multiple=\"multiple\"");
        }
        
        $output .=  " ";
#line 1 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'elements', 0])) {
        $output .=  ("size=\"" . $stash->get(['sel', 0, 'elements', 0]) . "\"");
        }
        
        $output .=  " ";
#line 31 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'events', 0])) {
        $output .=  $stash->get(['sel', 0, 'events', 0]);
        }
        
        $output .=  " ";
#line 32 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'style', 0])) {
        $output .=  $stash->get(['sel', 0, 'style', 0]);
        }
        
        $output .=  ">";
#line 40 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['sel', 0, 'list', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'item'} = $_tt_value;
        $output .=  "\n        <option value=\"";
#line 34 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['sel', 0, 'byname', 0]) ? $stash->get(['item', 0, 'name', 0]) : $stash->get(['item', 0, 'id', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" ";
#line 35 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if (($stash->get(['sel', 0, 'default', 0]) eq $stash->get(['item', 0, 'name', 0]) && $stash->get(['item', 0, 'name', 0]) ne '')) {
        $output .=  'selected="selected"';
        }
        
        $output .=  " ";
#line 36 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'default', 0]) eq $stash->get(['item', 0, 'id', 0]) && $stash->get(['item', 0, 'id', 0]) ne '') {
        $output .=  'selected="selected"';
        }
        
#line 37 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if ($stash->get(['sel', 0, 'default', 0]) eq 'all') {
        $output .=  'selected="selected"';
        }
        
#line 38 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        if (($stash->get(['sel', 0, 'deflist', 0]) eq 1 && $stash->get(['lsearch', [ $stash->get(['sel', 0, 'default', 0]), $stash->get(['item', 0, 'id', 0]) ]]) > -1)) {
        $output .=  'selected="selected"';
        }
        
        $output .=  ">";
#line 39 "extensions/Testopia/template/en/default/testopia/blocks.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n      </select>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
