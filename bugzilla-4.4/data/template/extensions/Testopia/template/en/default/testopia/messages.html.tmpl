use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'testopia/messages.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
#line 28 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    
    # CAPTURE
    $stash->set('goback', do {
        my $output = '';
    $output .=  "\n  <br/>\n  <a href=\"tr_show_";
#line 27 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['backlink', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".cgi?";
#line 27 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['backlink', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "_id=";
#line 27 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    $output .=  $stash->get(['backlink', 0, 'id', 0]);
    $output .=  "\">Back to ";
#line 27 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['backlink', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;";
#line 27 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['backlink', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>";
        $output;
    });
    
    $output .=  "\n";
#line 39 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    if ($stash->get('tr_message')) {
    $output .=  "  \n  <p>\n  <table style=\"border-collapse:collapse;\" border=\"1\" bordercolor=\"black\" width=\"100%\" cellspacing=\"0\" cellpadding=\"6\"><tr><td>\n  <font color=\"green\">";
#line 33 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    $output .=  $stash->get('tr_message');
    $output .=  "</font>";
#line 36 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    if ($stash->get('backlink')) {
#line 35 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    $output .=  $stash->get('goback');
    }
    
    $output .=  "\n  </td></tr></table>\n  </p>";
    }
    
    $output .=  "\n";
#line 50 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    if ($stash->get('tr_error')) {
    $output .=  "\n  <p>\n  <table style=\"border-collapse:collapse;\" border=\"1\" bordercolor=\"red\" width=\"100%\" cellspacing=\"0\" cellpadding=\"6\"><tr><td>\n  <font color=\"red\">";
#line 44 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    $output .=  $stash->get('tr_error');
    $output .=  "</font>";
#line 47 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    if ($stash->get('backlink')) {
#line 46 "extensions/Testopia/template/en/default/testopia/messages.html.tmpl"
    $output .=  $stash->get('goback');
    }
    
    $output .=  "\n  </td></tr></table>\n  </p>";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
