use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/reports/report-pie.png.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 25 "extensions/Testopia/template/en/default/testopia/reports/report-pie.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('null')
                  || $context->throw($context->error);
    
#line 25 "extensions/Testopia/template/en/default/testopia/reports/report-pie.png.tmpl"
    # USE
    $stash->set('graph',
                $context->plugin('GD.Graph.pie', [ $stash->get('width'), $stash->get('height') ]));
#line 25 "extensions/Testopia/template/en/default/testopia/reports/report-pie.png.tmpl"
    $output .=  $stash->get(['graph', 0, 'set', [ { 'title' => $stash->get('chart_title'), 'pie_height' => 10, 'dclrs' => $stash->get('colors') } ]]);
#line 25 "extensions/Testopia/template/en/default/testopia/reports/report-pie.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('stdout', [ 1 ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['graph', 0, 'plot', [ $stash->get('data') ], 'png', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
