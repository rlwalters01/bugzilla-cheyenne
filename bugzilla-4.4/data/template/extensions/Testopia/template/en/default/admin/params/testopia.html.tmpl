use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1389716719',
        'name' => 'admin/params/testopia.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n  ";
#line 22 "extensions/Testopia/template/en/default/admin/params/testopia.html.tmpl"
    $stash->set('title', 'Testopia');
    $stash->set('desc', 'Set Testopia parameters');
    $output .=  "\n";
#line 27 "extensions/Testopia/template/en/default/admin/params/testopia.html.tmpl"
    $stash->set('param_descs', { 'private-cases-log' => 'If this option is on, the tester cannot view other testers\' cases', 'allow-test-deletion' => 'If this option is on, users can delete objects including plans and cases', 'testopia-allow-group-member-deletes' => 'If this option is on, members of the Testers group will be 
                                                allowed to delete test objects', 'testopia-default-plan-testers-regexp' => 'This is the default regular expression for granting 
                                                  access to new test plans', 'print-tag-in-case-log' => 'If this option is on, the entire tag text is printed in a test case '  . 'log entry. Otherwise, only an href to the tag is put there.', 'new-case-action-template' => ('' . "This is the text to be put in a newly created test case \"action\" field"), 'new-case-results-template' => ('' . "This is the text to be put in a newly created test case \"expected results\" field"), 'bug-to-test-case-summary' => 'This is the default summary text used when generating a test case '  . 'out of a bug. The special symbol %id% is replaced with the bug id and '  . '%summary% is replaced with the bug\'s summary', 'bug-to-test-case-action' => 'This is the default action text used when generating a test case '  . 'out of a bug. The special symbol %id% is replaced with a '  . ('' . "hyperlink to the bug's page. The special symbol %description% is ")  . 'replaced with the bug\'s description', 'bug-to-test-case-results' => 'This is the default results text used when generating a test case '  . 'out of a bug. The special symbol %id% is replaced with a '  . 'hyperlink to the bug\'s page', 'default-test-case-status' => 'Default status for newly created test cases.', 'new-testrun-email-notif' => 'E-mail message sent to assigned testers when a new test run is started. '  . 'There are some special symbols replaced at run time:<br/>'  . '%to%: list of assigned testers email addresses<br/>'  . '%summary%: test run summary<br/>'  . '%plan%: plan\'s name<br/>'  . '%plan_id%: plan\'s id<br/>'  . '%product%: product\'s name<br/>'  . '%product_id%: product\'s id', 'case-failed-email-notif' => 'E-mail message sent when a test case log is marked as \'failed\'. '  . 'There are some special symbols replaced at run time:<br/>'  . '%id%: test case log id<br/>'  . '%manager%: test run\'s manager<br/>'  . '%test_run%: test run\'s summary<br/>'  . '%tester%: tester<br/>'  . '%component%: component\'s name', 'tester-completed-email-notif' => 'E-mail message sent when a tester has run every assigned test case.', 'test-run-completed-email-notif' => 'E-mail message sent when every test case in a test run is completed.', 'testopia-max-allowed-plan-testers' => 'Limit to how many users a plan access regular expression should match', 'testopia-debug' => 'Developer: Load individual files (Slowest) <br>ON: Use the debug version of Javascript files (Slower but needful if reporting javascript related problems) <br/> OFF: Use the compressed version (faster)'  });
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
