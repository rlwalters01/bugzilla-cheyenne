use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/run/show.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n   <tr:testrun id=\"";
#line 20 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n       <tr:summary>";
#line 21 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'summary', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:summary>\n       <tr:plan id=\"";
#line 22 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'plan_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 22 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'plan', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:plan>\n       <tr:plan_text_version>";
#line 23 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'plan_text_version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:plan_text_version>\n       <tr:product_version>";
#line 24 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'product_version', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:product_version>\n       <tr:build id=\"";
#line 25 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'build_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n           <tr:name>";
#line 26 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'build', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n           <tr:product id=\"";
#line 27 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'build', 0, 'product', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 27 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'build', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:product>\n           <tr:milestone>";
#line 28 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'build', 0, 'milestone', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:milestone>\n       </tr:build>\n       <tr:environment id=\"";
#line 30 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'environment_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n           <tr:name>";
#line 31 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'environment', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n           <tr:product id=\"";
#line 32 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'environment', 0, 'product', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 32 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'environment', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:product>\n       </tr:environment>\n       <tr:manager id=\"";
#line 34 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'manager_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n           <tr:login>";
#line 35 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'manager', 0, 'login_name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:login>\n           <tr:name>";
#line 36 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'manager', 0, 'realname', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:name>\n        </tr:manager>  \n       <tr:start_date>";
#line 38 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'start_date', 0, 'replace', [ ' ', 'T' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:start_date>";
#line 41 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    if ($stash->get(['run', 0, 'stop_date', 0])) {
    $output .=  "\n       <tr:stop_date>";
#line 40 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'stop_date', 0, 'replace', [ ' ', 'T' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:stop_date>";
    }
    
#line 44 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    if ($stash->get(['run', 0, 'last_changed', 0])) {
    $output .=  "\n       <tr:last_changed>";
#line 43 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'last_changed', 0, 'replace', [ ' ', 'T' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:last_changed>";
    }
    
    $output .=  "\n       <tr:case_count>";
#line 45 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'case_count', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:case_count>\n       <tr:total_time>";
#line 46 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'total_time', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:total_time>\n       <tr:target_pass_rate>";
#line 47 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'target_pass', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:target_pass_rate>\n       <tr:target_completion_rate>";
#line 48 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'target_completion', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:target_completion_rate>\n       <tr:percent_complete>";
#line 49 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'percent_complete', 0]) || 0;
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:percent_complete>\n       <tr:percent_passed>";
#line 50 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'percent_of_finished', [ 2 ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:percent_passed>\n       <tr:percent_failed>";
#line 51 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'percent_of_finished', [ 3 ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:percent_failed>\n       <tr:percent_blocked>";
#line 52 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'percent_of_finished', [ 6 ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:percent_blocked>";
#line 55 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['run', 0, 'tags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'t'} = $_tt_value;
    $output .=  "\n       <tr:tag>";
#line 54 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['t', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tr:tag>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n       <tr:notes><![CDATA[";
#line 56 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['run', 0, 'notes', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "]]></tr:notes>";
#line 59 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['run', 0, 'caseruns', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'caserun'} = $_tt_value;
#line 58 "extensions/Testopia/template/en/default/testopia/run/show.xml.tmpl"
    $output .=  $context->process('testopia/caserun/show.xml.tmpl');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </tr:testrun>";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
