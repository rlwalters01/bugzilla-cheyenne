use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1338251990',
        'name' => 'testopia/search/plan.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
#line 28 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    if ($stash->get('report')) {
    $output .=  "\n<form  id=\"plan_search_form\" action=\"tr_plan_reports.cgi\" method=\"GET\">    ";
#line 23 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('testopia/search/report-matrix.html.tmpl', { 'obj' => $stash->get('plan') });
    $output .=  "   ";
    }
    else {
    $output .=  "\n<form id=\"plan_search_form\" action=\"tr_list_plans.cgi\" method=\"GET\">";
    }
    
    $output .=  "\n  <input type=\"hidden\" name=\"current_tab\" value=\"";
#line 29 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('current_tab');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" />\n<fieldset>\n    <legend><strong>Product</strong></legend>\n<table>\n  <tr class=\"bz_row_header\">";
#line 36 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    if ($stash->get(['Param', [ 'useclassification' ]])) {
    $output .=  "\n    <th>Classification</th>";
    }
    
    $output .=  "\n    <th>Product</th>\n    <th>Product Version</th>\n    <th>Type</th>\n  </tr>\n  <tr>";
#line 55 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    if ($stash->get(['Param', [ 'useclassification' ]])) {
    $output .=  "\n    <td style=\"padding-right: 30px;\">";
#line 44 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'classification', 'accesskey' => 'p', 'list' => $stash->get(['user', 0, 'get_selectable_classifications', 0]), 'elements' => 5, 'byname' => 1, 'mult' => 1, 'events' => 'onChange="document.getElementById(\'version\').disabled=true;
                                              document.getElementById(\'product\').disabled=true; 
                                              t.onProductSelection(this)"'  } });
    $output .=  "\n\n    </td>";
    }
    
    $output .=  "\n    <td style=\"padding-right: 30px;\">";
#line 57 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'product', 'accesskey' => 'p', 'list' => $stash->get(['user', 0, 'get_selectable_products', 0]), 'elements' => 5, 'byname' => 1, 'mult' => 1, 'events' => 'onChange="document.getElementById(\'version\').disabled=true; 
                                              t.onProductSelection(this)"'  } });
    $output .=  "\n\n    </td>\n    <td style=\"padding-right: 30px;\">";
#line 68 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'version', 'accesskey' => 'v', 'list' => $stash->get('versions'), 'elements' => 5, 'mult' => 1  } });
    $output .=  "   \n    </td>\n    <td style=\"padding-right: 30px;\">";
#line 75 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'type_id', 'accesskey' => 'p', 'list' => $stash->get(['plan', 0, 'get_plan_types', 0]), 'elements' => 5, 'mult' => 1  } });
    $output .=  "\n    </td>\n  </tr>\n</table>\n</fieldset>\n<fieldset>\n    <legend><strong>Attributes</strong></legend>\n<table>\n  <tr>\n    <th align=\"right\">Name:</tH>\n    <td>";
#line 90 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'name_type', 'list' => $stash->get('query_variants')  } });
    $output .=  "</td>\n    <td><input name=\"name\"></td>\n  </tr>\n  <tr>\n    <th align=\"right\">Text:</tH>\n    <td>";
#line 97 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'plan_text_type', 'list' => $stash->get('query_variants')  } });
    $output .=  "</td>\n    <td><input name=\"plan_text\"></td>\n  </tr>\n  <tr>\n    <th align=\"right\">Tags:</tH>\n    <td>";
#line 104 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'tags_type', 'list' => $stash->get('tag_variants')  } });
    $output .=  "</td>\n    <td><input name=\"tags\"></td>\n  </tr>\n  <tr>\n    <th align=\"right\">Author:</tH>\n    <td>";
#line 111 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'author_type', 'list' => $stash->get('email_variants')  } });
    $output .=  "</td>\n    <td><input name=\"author\"></td>\n  </tr>\n</table>\n</fieldset>\n<fieldset>\n    <legend><strong>Permissions</strong></legend>\n<table>\n  <tr><td>Where User <input name=\"permuser\"> has at least\n    <select name=\"permission\">\n      <option value=\"15\">Admin</option>\n      <option value=\"7\">Delete</option>\n      <option value=\"3\">Write</option>\n      <option value=\"1\">Read</option>\n    </select> permissions\n</table>\n</fieldset>\n\n  <fieldset>\n    <legend><strong>Plan Changes</strong></legend>\n\n\n<dl>\n  <dt>Only plans changed between:</dt>\n  <dd>\n    <input name=\"chfieldfrom\" size=\"10\" value=\"";
#line 137 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['default', 0, 'chfieldfrom', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    and <input name=\"chfieldto\" size=\"10\" value=\"";
#line 138 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['default', 0, 'chfieldto', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    (YYYY-MM-DD or relative dates)\n  </dd>\n  <dt>where one or more of the following changed:</dt>\n  <dd>";
#line 143 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    $output .=  $context->process('select', { 'sel' => { 'name' => 'chfield_type', 'accesskey' => 'p', 'list' => $stash->get(['plan', 0, 'get_fields', 0]), 'elements' => 5, 'mult' => 1  } });
    $output .=  "\n  </dd>\n  <dt>and the new value was:</dt>\n  <dd>\n    <input name=\"chfieldvalue\" size=\"20\" value=\"";
#line 151 "extensions/Testopia/template/en/default/testopia/search/plan.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['default', 0, 'chfieldvalue', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  </dd>\n</dl>\n\n   </fieldset>\n\n<p style=\"font-weight: bold;\">\n  <label for=\"plan_id\">\n     Include plans numbered: \n  </label>\n  <input name=\"plan_id\" id=\"plan_id\">\n  <br/><br/>\n  <label for=\"archived\">\n    Include Archived Plans:\n  </label>\n  <input type=\"checkbox\" style=\"border: none\" name=\"isactive\" id=\"isactive\" value=\"1\" />\n</p>\n\n</form>  \n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
